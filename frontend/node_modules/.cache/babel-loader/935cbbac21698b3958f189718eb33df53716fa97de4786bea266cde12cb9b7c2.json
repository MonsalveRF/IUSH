{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react_projects/IUSH_CongresoEmprendimiento/frontend/src/FormCrearEvaluador.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { BASE_URL } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n`;\n_c = Form;\nconst Label = styled.label`\n    font-family: 'Hint Vadodara', sans-serif;\n    color: black;\n    width: 100%;\n    text-align: left;\n`;\n_c2 = Label;\nconst Input = styled.input`\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-family: 'Hint Vadodara', sans-serif;\n    background-color: #f9f9f9;\n`;\n_c3 = Input;\nconst SelectContainer = styled.div`\n    width: 100%;\n    position: relative;\n`;\n_c4 = SelectContainer;\nconst SearchInput = styled.input`\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-family: 'Hint Vadodara', sans-serif;\n    background-color: #f9f9f9;\n    box-sizing: border-box;\n    cursor: pointer;\n`;\n_c5 = SearchInput;\nconst OptionsList = styled.div`\n    position: absolute;\n    width: 100%;\n    max-height: 200px;\n    overflow-y: auto;\n    background-color: white;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    z-index: 10;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n`;\n_c6 = OptionsList;\nconst OptionItem = styled.div`\n    padding: 10px;\n    cursor: pointer;\n    color: black;\n    &:hover {\n        background-color: #67157D;\n        color: white;\n    }\n`;\n_c7 = OptionItem;\nconst ClearButton = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: #666;\n    font-size: 18px;\n`;\n_c8 = ClearButton;\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    width: 100%;\n`;\n_c9 = ButtonContainer;\nconst Button = styled.button`\n    width: 100%;\n    padding: 10px;\n    margin: 5px 0;\n    background: ${props => props.disabled ? '#ccc' : props.active ? '#5f92bb' : '#2c5c85'};\n    color: white;\n    border: none;\n    border-radius: 5px;\n    font-family: 'Hint Vadodara', sans-serif;\n    cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n    opacity: ${props => props.disabled ? 0.6 : 1};\n    transition: background-color 0.3s ease;\n\n    &:hover {\n        background: ${props => props.disabled ? '#ccc' : '#8cb8d3'};\n    }\n    `;\n_c10 = Button;\nconst FormCrearEvaluador = ({\n  handleRegresar\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    idIES: '',\n    telefono: '',\n    correo: '',\n    idPais: '',\n    documentoIdentidad: ''\n  });\n  const [searchTermNacionalidad, setSearchTermNacionalidad] = useState('');\n  const [searchTermInstitucion, setSearchTermInstitucion] = useState('');\n  const [filteredNacionalidades, setFilteredNacionalidades] = useState([]);\n  const [filteredInstituciones, setFilteredInstituciones] = useState([]);\n  const [isNacionalidadOptionsOpen, setIsNacionalidadOptionsOpen] = useState(false);\n  const [isInstitucionOptionsOpen, setIsInstitucionOptionsOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [nacionalidades, setNacionalidades] = useState([]);\n  const [instituciones, setInstituciones] = useState([]);\n  const nacionalidadOptionsListRef = useRef(null);\n  const institucionOptionsListRef = useRef(null);\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [id]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const evaluadorData = {\n      nombre: formData.nombre,\n      idIES: formData.idIES,\n      telefono: formData.telefono,\n      correo: formData.correo,\n      idPais: formData.idPais,\n      documentoIdentidad: formData.documentoIdentidad\n    };\n    console.log('Datos a enviar:', evaluadorData);\n    try {\n      const response = await fetch(`${BASE_URL}/evaluador/crear`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(evaluadorData)\n      });\n      console.log('Estado de la respuesta:', response.status);\n      console.log('Cabeceras de la respuesta:', Object.fromEntries(response.headers.entries()));\n      const text = await response.text();\n      console.log('Respuesta del servidor:', text);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      let result;\n      try {\n        result = JSON.parse(text);\n        console.log('Evaluador creado exitosamente:', result);\n        handleRegresar(); // Regresar a la pantalla anterior después de crear el evaluador\n      } catch (parseError) {\n        console.error('Error al parsear la respuesta como JSON:', parseError);\n        throw new Error('La respuesta del servidor no es JSON válido');\n      }\n    } catch (error) {\n      console.error('Error creando evaluador:', error);\n      // Aquí puedes agregar lógica para manejar el error, como mostrar un mensaje al usuario\n    }\n  };\n  const handleSearchChangeNacionalidad = e => {\n    const value = e.target.value;\n    setSearchTermNacionalidad(value);\n    setFilteredNacionalidades(nacionalidades.filter(nac => nac.descripcion.toLowerCase().includes(value.toLowerCase())));\n  };\n  const handleSearchChangeInstitucion = e => {\n    const value = e.target.value;\n    setSearchTermInstitucion(value);\n    filterInstituciones(value);\n  };\n  const filterInstituciones = (searchTerm = '') => {\n    const filteredList = instituciones.filter(ies => ies.nombre.toLowerCase().includes(searchTerm.toLowerCase()) && (!formData.idPais || ies.paisIES === formData.idPais));\n    setFilteredInstituciones(filteredList);\n  };\n  const handleOptionClickNacionalidad = (id, descripcion) => {\n    setFormData(prevData => ({\n      ...prevData,\n      idPais: id\n    }));\n    setSearchTermNacionalidad(descripcion);\n    setIsNacionalidadOptionsOpen(false);\n    setFormData(prevData => ({\n      ...prevData,\n      idIES: ''\n    }));\n    setSearchTermInstitucion('');\n    filterInstituciones();\n  };\n  const handleOptionClickInstitucion = (id, nombre) => {\n    setFormData(prevData => ({\n      ...prevData,\n      idIES: id\n    }));\n    setSearchTermInstitucion(nombre);\n    setIsInstitucionOptionsOpen(false);\n  };\n  const toggleOptionsNacionalidad = () => {\n    setIsNacionalidadOptionsOpen(!isNacionalidadOptionsOpen);\n  };\n  const toggleOptionsInstitucion = () => {\n    setIsInstitucionOptionsOpen(!isInstitucionOptionsOpen);\n  };\n  const clearNacionalidad = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      idPais: '',\n      idIES: ''\n    }));\n    setSearchTermNacionalidad('');\n    setSearchTermInstitucion('');\n    setFilteredNacionalidades(nacionalidades);\n    setFilteredInstituciones(instituciones);\n  };\n  const clearInstitucion = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      idIES: ''\n    }));\n    setSearchTermInstitucion('');\n    filterInstituciones();\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (nacionalidadOptionsListRef.current && !nacionalidadOptionsListRef.current.contains(event.target) && !event.target.closest('#searchInputNacionalidad')) {\n        setIsNacionalidadOptionsOpen(false);\n      }\n      if (institucionOptionsListRef.current && !institucionOptionsListRef.current.contains(event.target) && !event.target.closest('#searchInputInstitucion')) {\n        setIsInstitucionOptionsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    const fetchNacionalidades = async () => {\n      try {\n        // INICIO: Bloque de datos simulados\n        // Comentar desde aquí hasta \"FIN: Bloque de datos simulados\" cuando se implementen datos reales\n        /*\n        const simulatedData = {\n            \"ok\": true,\n            \"data\": [\n                {\n                    \"_id\": \"6673472cf182f9b41b2c1290\",\n                    \"nombre\": \"COL\",\n                    \"descripcion\": \"COLOMBIA\"\n                },\n                {\n                    \"_id\": \"66736b2317fb868463e7e60c\",\n                    \"nombre\": \"ABW\",\n                    \"descripcion\": \"ARUBA\"\n                },\n                {\n                    \"_id\": \"6673713717fb868463e7e615\",\n                    \"nombre\": \"AND\",\n                    \"descripcion\": \"ANDORRA\"\n                }\n            ],\n            \"message\": \"Todo ok\",\n            \"error\": null\n        };\n         setNacionalidades(simulatedData.data);\n        setFilteredNacionalidades(simulatedData.data);\n        */\n        // FIN: Bloque de datos simulados\n\n        // INICIO: Bloque para obtención de datos reales\n        // Descomentar este bloque y comentar el bloque de datos simulados cuando se implemente la obtención de datos reales\n\n        console.log('Iniciando solicitud a:', `${BASE_URL}/pais/obtener`);\n        const response = await axios.get(`${BASE_URL}/pais/obtener`, {});\n        console.log('Respuesta recibida:', response);\n        if (response.data && Array.isArray(response.data.data)) {\n          setNacionalidades(response.data.data);\n          setFilteredNacionalidades(response.data.data);\n        } else {\n          throw new Error('La respuesta no tiene el formato esperado');\n        }\n\n        // FIN: Bloque para obtención de datos reales\n      } catch (error) {\n        console.error('Error al obtener nacionalidades:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const fetchInstituciones = async () => {\n      try {\n        // INICIO: Bloque de datos simulados\n        // Comentar desde aquí hasta \"FIN: Bloque de datos simulados\" cuando se implementen datos reales\n        /*\n        const simulatedData = {\n            \"ok\": true,\n            \"data\": [\n                {\n                    \"_id\": \"66736b9b17fb868463e7e60e\",\n                    \"nombre\": \"Xavier University School of Medicine, Aruba\",\n                    \"paisIES\": \"66736b2317fb868463e7e60c\"\n                },\n                {\n                    \"_id\": \"66736fd217fb868463e7e611\",\n                    \"nombre\": \"University of Aruba\",\n                    \"paisIES\": \"66736b2317fb868463e7e60c\"\n                },\n                {\n                    \"_id\": \"66736fde17fb868463e7e613\",\n                    \"nombre\": \"Aureus University School of Medicine\",\n                    \"paisIES\": \"66736b2317fb868463e7e60c\"\n                },\n                {\n                    \"_id\": \"667371a017fb868463e7e618\",\n                    \"nombre\": \"Universitat d'Andorra\",\n                    \"paisIES\": \"6673713717fb868463e7e615\"\n                },\n                {\n                    \"_id\": \"667371ac17fb868463e7e61a\",\n                    \"nombre\": \"Universitat Oberta de la Salle, Andorra\",\n                    \"paisIES\": \"6673713717fb868463e7e615\"\n                }\n            ],\n            \"message\": \"Todo ok\",\n            \"error\": null\n        };\n         setInstituciones(simulatedData.data);\n        setFilteredInstituciones(simulatedData.data);\n        */\n        // FIN: Bloque de datos simulados\n\n        // INICIO: Bloque para obtención de datos reales\n        // Descomentar este bloque y comentar el bloque de datos simulados cuando se implemente la obtención de datos reales\n\n        const response = await axios.get(`${BASE_URL}/institucionesEducativas/obtenerInstitucionesEducativas`, {});\n        console.log('Respuesta recibida:', response);\n        if (response.data && Array.isArray(response.data.data)) {\n          setInstituciones(response.data.data);\n          setFilteredInstituciones(response.data.data);\n        } else {\n          throw new Error('La respuesta no tiene el formato esperado');\n        }\n\n        // FIN: Bloque para obtención de datos reales\n      } catch (error) {\n        console.error('Error fetching instituciones:', error);\n      }\n    };\n    fetchNacionalidades();\n    fetchInstituciones();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"nombre\",\n      children: \"Nombre:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"nombre\",\n      type: \"text\",\n      value: formData.nombre,\n      onChange: handleChange,\n      required: true,\n      placeholder: \"Ingrese el nombre completo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"documentoIdentidad\",\n      children: \"Documento de Identidad:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"documentoIdentidad\",\n      type: \"text\",\n      value: formData.documentoIdentidad,\n      onChange: handleChange,\n      required: true,\n      placeholder: \"Ingrese el n\\xFAmero de documento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"telefono\",\n      children: \"Tel\\xE9fono:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"telefono\",\n      type: \"tel\",\n      value: formData.telefono,\n      onChange: handleChange,\n      required: true,\n      placeholder: \"Ingrese el n\\xFAmero de tel\\xE9fono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"correo\",\n      children: \"Correo electr\\xF3nico:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"correo\",\n      type: \"email\",\n      value: formData.correo,\n      onChange: handleChange,\n      required: true,\n      placeholder: \"Ingrese el correo electr\\xF3nico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Nacionalidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        id: \"searchInputNacionalidad\",\n        type: \"text\",\n        value: searchTermNacionalidad,\n        onChange: handleSearchChangeNacionalidad,\n        onClick: toggleOptionsNacionalidad,\n        placeholder: \"Buscar nacionalidad...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n        onClick: clearNacionalidad,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }, this), isNacionalidadOptionsOpen && /*#__PURE__*/_jsxDEV(OptionsList, {\n        ref: nacionalidadOptionsListRef,\n        children: filteredNacionalidades.length > 0 ? filteredNacionalidades.map(nac => /*#__PURE__*/_jsxDEV(OptionItem, {\n          onClick: () => handleOptionClickNacionalidad(nac._id, nac.descripcion),\n          children: nac.descripcion\n        }, nac._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(OptionItem, {\n          children: \"No hay resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: \"Instituci\\xF3n a la que pertenece:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        id: \"searchInputInstitucion\",\n        type: \"text\",\n        value: searchTermInstitucion,\n        onChange: handleSearchChangeInstitucion,\n        onClick: toggleOptionsInstitucion,\n        placeholder: \"Buscar instituci\\xF3n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n        onClick: clearInstitucion,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), isInstitucionOptionsOpen && /*#__PURE__*/_jsxDEV(OptionsList, {\n        ref: institucionOptionsListRef,\n        children: filteredInstituciones.length > 0 ? filteredInstituciones.map(ies => /*#__PURE__*/_jsxDEV(OptionItem, {\n          onClick: () => handleOptionClickInstitucion(ies._id, ies.nombre),\n          children: ies.nombre\n        }, ies._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(OptionItem, {\n          children: \"No hay resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Terminado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: handleRegresar,\n        children: \"Regresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 9\n  }, this);\n};\n_s(FormCrearEvaluador, \"VNFV1Zd6rB1SLvndE8H2yN5cVcU=\");\n_c11 = FormCrearEvaluador;\nexport default FormCrearEvaluador;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"SelectContainer\");\n$RefreshReg$(_c5, \"SearchInput\");\n$RefreshReg$(_c6, \"OptionsList\");\n$RefreshReg$(_c7, \"OptionItem\");\n$RefreshReg$(_c8, \"ClearButton\");\n$RefreshReg$(_c9, \"ButtonContainer\");\n$RefreshReg$(_c10, \"Button\");\n$RefreshReg$(_c11, \"FormCrearEvaluador\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","BASE_URL","jsxDEV","_jsxDEV","Form","form","_c","Label","label","_c2","Input","input","_c3","SelectContainer","div","_c4","SearchInput","_c5","OptionsList","_c6","OptionItem","_c7","ClearButton","span","_c8","ButtonContainer","_c9","Button","button","props","disabled","active","_c10","FormCrearEvaluador","handleRegresar","_s","formData","setFormData","nombre","idIES","telefono","correo","idPais","documentoIdentidad","searchTermNacionalidad","setSearchTermNacionalidad","searchTermInstitucion","setSearchTermInstitucion","filteredNacionalidades","setFilteredNacionalidades","filteredInstituciones","setFilteredInstituciones","isNacionalidadOptionsOpen","setIsNacionalidadOptionsOpen","isInstitucionOptionsOpen","setIsInstitucionOptionsOpen","loading","setLoading","nacionalidades","setNacionalidades","instituciones","setInstituciones","nacionalidadOptionsListRef","institucionOptionsListRef","handleChange","e","id","value","target","prevData","handleSubmit","preventDefault","evaluadorData","console","log","response","fetch","method","headers","body","JSON","stringify","status","Object","fromEntries","entries","text","ok","Error","result","parse","parseError","error","handleSearchChangeNacionalidad","filter","nac","descripcion","toLowerCase","includes","handleSearchChangeInstitucion","filterInstituciones","searchTerm","filteredList","ies","paisIES","handleOptionClickNacionalidad","handleOptionClickInstitucion","toggleOptionsNacionalidad","toggleOptionsInstitucion","clearNacionalidad","clearInstitucion","handleClickOutside","event","current","contains","closest","document","addEventListener","removeEventListener","fetchNacionalidades","get","data","Array","isArray","fetchInstituciones","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","placeholder","onClick","ref","length","map","_id","_c11","$RefreshReg$"],"sources":["/Users/admin/Documents/react_projects/IUSH_CongresoEmprendimiento/frontend/src/FormCrearEvaluador.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { BASE_URL } from './App';\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n`;\n\nconst Label = styled.label`\n    font-family: 'Hint Vadodara', sans-serif;\n    color: black;\n    width: 100%;\n    text-align: left;\n`;\n\nconst Input = styled.input`\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-family: 'Hint Vadodara', sans-serif;\n    background-color: #f9f9f9;\n`;\n\nconst SelectContainer = styled.div`\n    width: 100%;\n    position: relative;\n`;\n\nconst SearchInput = styled.input`\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-family: 'Hint Vadodara', sans-serif;\n    background-color: #f9f9f9;\n    box-sizing: border-box;\n    cursor: pointer;\n`;\n\nconst OptionsList = styled.div`\n    position: absolute;\n    width: 100%;\n    max-height: 200px;\n    overflow-y: auto;\n    background-color: white;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    z-index: 10;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst OptionItem = styled.div`\n    padding: 10px;\n    cursor: pointer;\n    color: black;\n    &:hover {\n        background-color: #67157D;\n        color: white;\n    }\n`;\n\nconst ClearButton = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n    cursor: pointer;\n    color: #666;\n    font-size: 18px;\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    width: 100%;\n`;\n\nconst Button = styled.button`\n    width: 100%;\n    padding: 10px;\n    margin: 5px 0;\n    background: ${props => props.disabled ? '#ccc' : props.active ? '#5f92bb' : '#2c5c85'};\n    color: white;\n    border: none;\n    border-radius: 5px;\n    font-family: 'Hint Vadodara', sans-serif;\n    cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n    opacity: ${props => props.disabled ? 0.6 : 1};\n    transition: background-color 0.3s ease;\n\n    &:hover {\n        background: ${props => props.disabled ? '#ccc' : '#8cb8d3'};\n    }\n    `;\n\nconst FormCrearEvaluador = ({ handleRegresar }) => {\n    const [formData, setFormData] = useState({\n        nombre: '',\n        idIES: '',\n        telefono: '',\n        correo: '',\n        idPais: '',\n        documentoIdentidad: ''\n    });\n\n    const [searchTermNacionalidad, setSearchTermNacionalidad] = useState('');\n    const [searchTermInstitucion, setSearchTermInstitucion] = useState('');\n    const [filteredNacionalidades, setFilteredNacionalidades] = useState([]);\n    const [filteredInstituciones, setFilteredInstituciones] = useState([]);\n    const [isNacionalidadOptionsOpen, setIsNacionalidadOptionsOpen] = useState(false);\n    const [isInstitucionOptionsOpen, setIsInstitucionOptionsOpen] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [nacionalidades, setNacionalidades] = useState([]);\n    const [instituciones, setInstituciones] = useState([]);\n\n    const nacionalidadOptionsListRef = useRef(null);\n    const institucionOptionsListRef = useRef(null);\n\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        setFormData((prevData) => ({\n            ...prevData,\n            [id]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const evaluadorData = {\n            nombre: formData.nombre,\n            idIES: formData.idIES,\n            telefono: formData.telefono,\n            correo: formData.correo,\n            idPais: formData.idPais,\n            documentoIdentidad: formData.documentoIdentidad\n        };\n        console.log('Datos a enviar:', evaluadorData);\n        \n        try {\n            const response = await fetch(`${BASE_URL}/evaluador/crear`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(evaluadorData),\n            });\n            \n            console.log('Estado de la respuesta:', response.status);\n            console.log('Cabeceras de la respuesta:', Object.fromEntries(response.headers.entries()));\n            \n            const text = await response.text();\n            console.log('Respuesta del servidor:', text);\n            \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            \n            let result;\n            try {\n                result = JSON.parse(text);\n                console.log('Evaluador creado exitosamente:', result);\n                handleRegresar(); // Regresar a la pantalla anterior después de crear el evaluador\n            } catch (parseError) {\n                console.error('Error al parsear la respuesta como JSON:', parseError);\n                throw new Error('La respuesta del servidor no es JSON válido');\n            }\n        } catch (error) {\n            console.error('Error creando evaluador:', error);\n            // Aquí puedes agregar lógica para manejar el error, como mostrar un mensaje al usuario\n        }\n    };\n\n    const handleSearchChangeNacionalidad = (e) => {\n        const value = e.target.value;\n        setSearchTermNacionalidad(value);\n        setFilteredNacionalidades(\n            nacionalidades.filter(nac =>\n                nac.descripcion.toLowerCase().includes(value.toLowerCase())\n            )\n        );\n    };\n\n    const handleSearchChangeInstitucion = (e) => {\n        const value = e.target.value;\n        setSearchTermInstitucion(value);\n        filterInstituciones(value);\n    };\n\n    const filterInstituciones = (searchTerm = '') => {\n        const filteredList = instituciones.filter(ies =>\n            ies.nombre.toLowerCase().includes(searchTerm.toLowerCase()) &&\n            (!formData.idPais || ies.paisIES === formData.idPais)\n        );\n        setFilteredInstituciones(filteredList);\n    };\n\n    const handleOptionClickNacionalidad = (id, descripcion) => {\n        setFormData(prevData => ({\n            ...prevData,\n            idPais: id\n        }));\n        setSearchTermNacionalidad(descripcion);\n        setIsNacionalidadOptionsOpen(false);\n        \n        setFormData(prevData => ({ ...prevData, idIES: '' }));\n        setSearchTermInstitucion('');\n        filterInstituciones();\n    };\n    \n    const handleOptionClickInstitucion = (id, nombre) => {\n        setFormData(prevData => ({\n            ...prevData,\n            idIES: id\n        }));\n        setSearchTermInstitucion(nombre);\n        setIsInstitucionOptionsOpen(false);\n    };\n\n    const toggleOptionsNacionalidad = () => {\n        setIsNacionalidadOptionsOpen(!isNacionalidadOptionsOpen);\n    };\n\n    const toggleOptionsInstitucion = () => {\n        setIsInstitucionOptionsOpen(!isInstitucionOptionsOpen);\n    };\n\n    const clearNacionalidad = () => {\n        setFormData(prevData => ({\n            ...prevData,\n            idPais: '',\n            idIES: ''\n        }));\n        setSearchTermNacionalidad('');\n        setSearchTermInstitucion('');\n        setFilteredNacionalidades(nacionalidades);\n        setFilteredInstituciones(instituciones);\n    };\n\n    const clearInstitucion = () => {\n        setFormData(prevData => ({\n            ...prevData,\n            idIES: ''\n        }));\n        setSearchTermInstitucion('');\n        filterInstituciones();\n    };\n\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (\n                nacionalidadOptionsListRef.current &&\n                !nacionalidadOptionsListRef.current.contains(event.target) &&\n                !event.target.closest('#searchInputNacionalidad')\n            ) {\n                setIsNacionalidadOptionsOpen(false);\n            }\n            if (\n                institucionOptionsListRef.current &&\n                !institucionOptionsListRef.current.contains(event.target) &&\n                !event.target.closest('#searchInputInstitucion')\n            ) {\n                setIsInstitucionOptionsOpen(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n    useEffect(() => {\n        const fetchNacionalidades = async () => {\n            try {\n                // INICIO: Bloque de datos simulados\n                // Comentar desde aquí hasta \"FIN: Bloque de datos simulados\" cuando se implementen datos reales\n                /*\n                const simulatedData = {\n                    \"ok\": true,\n                    \"data\": [\n                        {\n                            \"_id\": \"6673472cf182f9b41b2c1290\",\n                            \"nombre\": \"COL\",\n                            \"descripcion\": \"COLOMBIA\"\n                        },\n                        {\n                            \"_id\": \"66736b2317fb868463e7e60c\",\n                            \"nombre\": \"ABW\",\n                            \"descripcion\": \"ARUBA\"\n                        },\n                        {\n                            \"_id\": \"6673713717fb868463e7e615\",\n                            \"nombre\": \"AND\",\n                            \"descripcion\": \"ANDORRA\"\n                        }\n                    ],\n                    \"message\": \"Todo ok\",\n                    \"error\": null\n                };\n\n                setNacionalidades(simulatedData.data);\n                setFilteredNacionalidades(simulatedData.data);\n                */\n                // FIN: Bloque de datos simulados\n\n                // INICIO: Bloque para obtención de datos reales\n                // Descomentar este bloque y comentar el bloque de datos simulados cuando se implemente la obtención de datos reales\n            \n\n                console.log('Iniciando solicitud a:', `${BASE_URL}/pais/obtener`);\n                \n                const response = await axios.get(`${BASE_URL}/pais/obtener`, {\n                });\n\n                console.log('Respuesta recibida:', response);\n\n                if (response.data && Array.isArray(response.data.data)) {\n                    setNacionalidades(response.data.data);\n                    setFilteredNacionalidades(response.data.data);\n                } else {\n                    throw new Error('La respuesta no tiene el formato esperado');\n                }\n                \n                // FIN: Bloque para obtención de datos reales\n            } catch (error) {\n                console.error('Error al obtener nacionalidades:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        const fetchInstituciones = async () => {\n            try {\n                // INICIO: Bloque de datos simulados\n                // Comentar desde aquí hasta \"FIN: Bloque de datos simulados\" cuando se implementen datos reales\n                /*\n                const simulatedData = {\n                    \"ok\": true,\n                    \"data\": [\n                        {\n                            \"_id\": \"66736b9b17fb868463e7e60e\",\n                            \"nombre\": \"Xavier University School of Medicine, Aruba\",\n                            \"paisIES\": \"66736b2317fb868463e7e60c\"\n                        },\n                        {\n                            \"_id\": \"66736fd217fb868463e7e611\",\n                            \"nombre\": \"University of Aruba\",\n                            \"paisIES\": \"66736b2317fb868463e7e60c\"\n                        },\n                        {\n                            \"_id\": \"66736fde17fb868463e7e613\",\n                            \"nombre\": \"Aureus University School of Medicine\",\n                            \"paisIES\": \"66736b2317fb868463e7e60c\"\n                        },\n                        {\n                            \"_id\": \"667371a017fb868463e7e618\",\n                            \"nombre\": \"Universitat d'Andorra\",\n                            \"paisIES\": \"6673713717fb868463e7e615\"\n                        },\n                        {\n                            \"_id\": \"667371ac17fb868463e7e61a\",\n                            \"nombre\": \"Universitat Oberta de la Salle, Andorra\",\n                            \"paisIES\": \"6673713717fb868463e7e615\"\n                        }\n                    ],\n                    \"message\": \"Todo ok\",\n                    \"error\": null\n                };\n\n                setInstituciones(simulatedData.data);\n                setFilteredInstituciones(simulatedData.data);\n                */\n                // FIN: Bloque de datos simulados\n\n                // INICIO: Bloque para obtención de datos reales\n                // Descomentar este bloque y comentar el bloque de datos simulados cuando se implemente la obtención de datos reales\n                \n                const response = await axios.get(`${BASE_URL}/institucionesEducativas/obtenerInstitucionesEducativas`, {\n                });\n\n                console.log('Respuesta recibida:', response);\n\n                if (response.data && Array.isArray(response.data.data)) {\n                    setInstituciones(response.data.data);\n                    setFilteredInstituciones(response.data.data);\n                } else {\n                    throw new Error('La respuesta no tiene el formato esperado');\n                }\n                \n                // FIN: Bloque para obtención de datos reales\n            } catch (error) {\n                console.error('Error fetching instituciones:', error);\n            }\n        };\n\n        fetchNacionalidades();\n        fetchInstituciones();\n    }, []);\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label htmlFor=\"nombre\">Nombre:</Label>\n            <Input \n                id=\"nombre\" \n                type=\"text\" \n                value={formData.nombre} \n                onChange={handleChange} \n                required \n                placeholder=\"Ingrese el nombre completo\"\n            />\n\n            <Label htmlFor=\"documentoIdentidad\">Documento de Identidad:</Label>\n            <Input \n                id=\"documentoIdentidad\" \n                type=\"text\" \n                value={formData.documentoIdentidad} \n                onChange={handleChange} \n                required \n                placeholder=\"Ingrese el número de documento\"\n            />\n\n            <Label htmlFor=\"telefono\">Teléfono:</Label>\n            <Input \n                id=\"telefono\" \n                type=\"tel\" \n                value={formData.telefono} \n                onChange={handleChange} \n                required \n                placeholder=\"Ingrese el número de teléfono\"\n            />\n\n            <Label htmlFor=\"correo\">Correo electrónico:</Label>\n            <Input \n                id=\"correo\" \n                type=\"email\" \n                value={formData.correo} \n                onChange={handleChange} \n                required \n                placeholder=\"Ingrese el correo electrónico\"\n            />\n\n            <Label>Nacionalidad</Label>\n            <SelectContainer>\n                <SearchInput \n                    id=\"searchInputNacionalidad\" \n                    type=\"text\" \n                    value={searchTermNacionalidad} \n                    onChange={handleSearchChangeNacionalidad} \n                    onClick={toggleOptionsNacionalidad} \n                    placeholder=\"Buscar nacionalidad...\" \n                />\n                <ClearButton onClick={clearNacionalidad}>&times;</ClearButton>\n                {isNacionalidadOptionsOpen && (\n                    <OptionsList ref={nacionalidadOptionsListRef}>\n                    {filteredNacionalidades.length > 0 ? (\n                        filteredNacionalidades.map((nac) => (\n                            <OptionItem key={nac._id} onClick={() => handleOptionClickNacionalidad(nac._id, nac.descripcion)}>\n                                {nac.descripcion}\n                            </OptionItem>\n                        ))\n                    ) : (\n                        <OptionItem>No hay resultados</OptionItem>\n                    )}\n                    </OptionsList>\n                )}\n            </SelectContainer>\n\n            <Label>Institución a la que pertenece:</Label>\n            <SelectContainer>\n                <SearchInput \n                    id=\"searchInputInstitucion\" \n                    type=\"text\" \n                    value={searchTermInstitucion} \n                    onChange={handleSearchChangeInstitucion} \n                    onClick={toggleOptionsInstitucion} \n                    placeholder=\"Buscar institución...\"  \n                />\n                <ClearButton onClick={clearInstitucion}>&times;</ClearButton>\n                {isInstitucionOptionsOpen && (\n                    <OptionsList ref={institucionOptionsListRef}>\n                    {filteredInstituciones.length > 0 ? (\n                        filteredInstituciones.map((ies) => (\n                            <OptionItem key={ies._id} onClick={() => handleOptionClickInstitucion(ies._id, ies.nombre)}>\n                                {ies.nombre}\n                            </OptionItem>\n                        ))\n                    ) : (\n                        <OptionItem>No hay resultados</OptionItem>\n                    )}\n                    </OptionsList>\n                )}\n            </SelectContainer>\n\n            <ButtonContainer>\n                <Button type=\"submit\">Terminado</Button>\n                <Button type=\"button\" onClick={handleRegresar}>Regresar</Button>\n            </ButtonContainer>\n        </Form>\n    );\n};\n\nexport default FormCrearEvaluador;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}